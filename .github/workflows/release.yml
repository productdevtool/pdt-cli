# .github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  # This job builds the binaries for each target platform in parallel.
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.goarch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Define all the build targets
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
          - os: windows-latest
            goos: windows
            goarch: amd64

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set output binary name
        id: set_name
        run: |
          BINARY_NAME="pdt-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          echo "binary_name=${BINARY_NAME}" >> $GITHUB_OUTPUT

      - name: Build the binary
        run: |
          go build -o ${{ steps.set_name.outputs.binary_name }} -ldflags="-s -w" .

      - name: Upload binary as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdt-binaries
          path: ${{ steps.set_name.outputs.binary_name }}

  # This job runs only after all build jobs are complete.
  # It creates the release and uploads all the binaries at once.
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build # This ensures the build jobs finish first

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: "See CHANGELOG.md for details."
          draft: false
          prerelease: false

      - name: Download all binaries from build jobs
        uses: actions/download-artifact@v4
        with:
          name: pdt-binaries
          path: ./release-assets

      - name: Upload all binaries to the release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # Use a wildcard to upload all files in the directory
          asset_path: ./release-assets/*
          asset_name: ${{ matrix.asset_name }} # This will be set by the matrix below
          asset_content_type: application/octet-stream
